<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.AiMessageMapper">
    
    <resultMap type="AiMessage" id="AiMessageResult">
        <result property="id"    column="id"    />
        <result property="conversationId"    column="conversation_id"    />
        <result property="content"    column="content"    />
        <result property="messageType"    column="message_type"    />
        <result property="tokensUsed"    column="tokens_used"    />
        <result property="modelUsed"    column="model_used"    />
        <result property="emotionalContext"    column="emotional_context"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateBy"    column="update_by"    />
        <result property="delFlag"    column="del_flag"    />
    </resultMap>

    <sql id="selectAiMessageVo">
        select id, conversation_id, content, message_type, tokens_used, model_used, emotional_context, create_time, update_time, create_by, update_by, del_flag from ai_message
    </sql>

    <select id="selectAiMessageList" parameterType="AiMessage" resultMap="AiMessageResult">
        <include refid="selectAiMessageVo"/>
        <where>  
            <if test="conversationId != null "> and conversation_id = #{conversationId}</if>
            <if test="content != null  and content != ''"> and content = #{content}</if>
            <if test="messageType != null  and messageType != ''"> and message_type = #{messageType}</if>
            <if test="tokensUsed != null "> and tokens_used = #{tokensUsed}</if>
            <if test="modelUsed != null  and modelUsed != ''"> and model_used = #{modelUsed}</if>
            <if test="emotionalContext != null  and emotionalContext != ''"> and emotional_context = #{emotionalContext}</if>
        </where>
    </select>
    
    <select id="selectAiMessageById" parameterType="Long" resultMap="AiMessageResult">
        <include refid="selectAiMessageVo"/>
        where id = #{id}
    </select>

    <insert id="insertAiMessage" parameterType="AiMessage" useGeneratedKeys="true" keyProperty="id">
        insert into ai_message
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="conversationId != null">conversation_id,</if>
            <if test="content != null and content != ''">content,</if>
            <if test="messageType != null and messageType != ''">message_type,</if>
            <if test="tokensUsed != null">tokens_used,</if>
            <if test="modelUsed != null">model_used,</if>
            <if test="emotionalContext != null">emotional_context,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="delFlag != null">del_flag,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="conversationId != null">#{conversationId},</if>
            <if test="content != null and content != ''">#{content},</if>
            <if test="messageType != null and messageType != ''">#{messageType},</if>
            <if test="tokensUsed != null">#{tokensUsed},</if>
            <if test="modelUsed != null">#{modelUsed},</if>
            <if test="emotionalContext != null">#{emotionalContext},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="delFlag != null">#{delFlag},</if>
         </trim>
    </insert>

    <update id="updateAiMessage" parameterType="AiMessage">
        update ai_message
        <trim prefix="SET" suffixOverrides=",">
            <if test="conversationId != null">conversation_id = #{conversationId},</if>
            <if test="content != null and content != ''">content = #{content},</if>
            <if test="messageType != null and messageType != ''">message_type = #{messageType},</if>
            <if test="tokensUsed != null">tokens_used = #{tokensUsed},</if>
            <if test="modelUsed != null">model_used = #{modelUsed},</if>
            <if test="emotionalContext != null">emotional_context = #{emotionalContext},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAiMessageById" parameterType="Long">
        delete from ai_message where id = #{id}
    </delete>

    <delete id="deleteAiMessageByIds" parameterType="String">
        delete from ai_message where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>